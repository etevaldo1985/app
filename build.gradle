/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.14'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'


    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.0.1-jre'
    implementation 'com.jfoenix:jfoenix:9.0.10'
    implementation 'org.openjfx:javafx-controls:20'
    implementation 'org.openjfx:javafx-fxml:20'
    implementation 'com.microsoft.sqlserver:mssql-jdbc:11.2.3.jre17'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'


}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}
javafx {
    version = "22.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

application {
    // Define the main class for the application.
    mainClass = 'com.App'
  
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        resources {
            srcDir 'src/test/resources'
        }
    }
}
tasks.withType(ProcessResources) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
